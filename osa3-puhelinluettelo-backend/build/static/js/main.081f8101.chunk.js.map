{"version":3,"sources":["components/Person.js","components/AddPersonForm.js","components/FilterForm.js","services/persons.js","App.js","index.js"],"names":["Person","props","person","name","number","onClick","handleDelete","PersonForm","onSubmit","addPerson","value","newName","onChange","handleNameChange","newNumber","handleNumberChange","type","FilterForm","handleFilterChange","nameFilter","baseUrl","axios","get","then","response","data","newObject","post","id","put","delete","Notification","message","messageType","className","App","useState","persons","setPersons","setNewName","setNewNumber","setNameFilter","setMessage","setMessageType","useEffect","personsService","initialPersons","filteredPersons","filter","toLowerCase","includes","window","confirm","p","setTimeout","event","target","AddPersonForm","preventDefault","find","personObject","returnedPerson","map","catch","error","n","concat","bind","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.081f8101.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Person = (props) => {\n  return (\n    <div>\n        {props.person.name} {props.person.number}\n        <button onClick={props.handleDelete}>delete</button> \n    </div>\n  );\n};\n\nexport default Person;\n","import React from 'react'\n\nconst PersonForm = (props) => {\n    return (\n        <form onSubmit={props.addPerson}>\n            <div>\n                <h2>Add a new</h2>\n                <div>\n                    name:\n                        <input\n                        value={props.newName}\n                        onChange={props.handleNameChange}\n                    />\n                </div>\n                <div>\n                    number:\n                        <input\n                        value={props.newNumber}\n                        onChange={props.handleNumberChange}\n                    />\n                </div>\n                <button type=\"submit\">add</button>\n            </div>\n        </form>\n    )\n}\n\n\nexport default PersonForm","import React from \"react\";\n\nconst FilterForm = (props) => {\n  return (\n    <div>\n      filter shown with\n      <input onChange={props.handleFilterChange} value={props.nameFilter} />\n    </div>\n  );\n};\n\nexport default FilterForm;\n","import axios from \"axios\";\nconst baseUrl = \"http://localhost:3001/api/persons\";\n\nconst getAll = () => {\n  const request = axios.get(baseUrl);\n  return request.then((response) => response.data);\n};\n\nconst create = (newObject) => {\n  const request = axios.post(baseUrl, newObject);\n  return request.then((response) => response.data);\n};\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject);\n  return request.then((response) => response.data);\n};\n\nconst remove = (id) => {\n  const request = axios.delete(`${baseUrl}/${id}`);\n  return request.then((response) => response.data);\n};\n\nexport default {\n  getAll,\n  create,\n  update,\n  remove,\n};\n","import React, { useState, useEffect } from \"react\";\nimport Person from \"./components/Person\";\nimport AddPersonForm from \"./components/AddPersonForm\";\nimport FilterForm from \"./components/FilterForm\";\nimport personsService from \"./services/persons\";\n\nconst Notification = ({ message, messageType }) => {\n  if (message === null) {\n    return null;\n  }\n\n  if (messageType === \"SUCCESS\") {\n    return <div className=\"success\">{message}</div>;\n  } else if (messageType === \"ERROR\") {\n    return <div className=\"error\">{message}</div>;\n  } else {\n    return <div className=\"error\">Something wen't wrong with the message.</div>;\n  }\n};\n\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n  const [newName, setNewName] = useState(\"\");\n  const [newNumber, setNewNumber] = useState(\"\");\n  const [nameFilter, setNameFilter] = useState(\"\");\n  const [message, setMessage] = useState(null);\n  const [messageType, setMessageType] = useState(\"\");\n\n  useEffect(() => {\n    personsService.getAll().then((initialPersons) => {\n      setPersons(initialPersons);\n    });\n  }, []);\n\n  const filteredPersons = persons.filter((person) => {\n    return person.name.toLowerCase().includes(nameFilter.toLowerCase());\n  });\n\n  const addPerson = (event) => {\n    event.preventDefault();\n\n    if (persons.find((person) => person.name === newName)) {\n      if (\n        window.confirm(\n          `${newName} is already added to the phonebook, replace the old number with a new one?`\n        )\n      ) {\n        const id = persons.find((person) => person.name === newName).id;\n        const personObject = {\n          id: id,\n          name: newName,\n          number: newNumber,\n        };\n\n        personsService\n          .update(id, personObject)\n          .then((returnedPerson) => {\n            setPersons(\n              persons.map((person) =>\n                person.id !== id ? person : returnedPerson\n              )\n            );\n          })\n          .catch((error) => {\n            setMessage(\n              `The person ${personObject.name} was already deleted from the Server`\n            );\n            setMessageType(\"ERROR\");\n            setTimeout(() => {\n              setMessage(null);\n            }, 5000);\n            setPersons(persons.filter((n) => n.id !== id));\n          });\n\n        setMessage(`Updated ${personObject.name}`);\n        setMessageType(\"SUCCESS\");\n        setTimeout(() => {\n          setMessage(null);\n        }, 5000);\n      }\n    } else {\n      const personObject = {\n        name: newName,\n        number: newNumber,\n      };\n\n      personsService\n        .create(personObject)\n        .then((returnedPerson) => {\n          setPersons(persons.concat(returnedPerson));\n          setNewName(\"\");\n          setNewNumber(\"\");\n          //Success message handling\n          setMessage(`Added ${personObject.name}`);\n          setMessageType(\"SUCCESS\");\n          setTimeout(() => {\n            setMessage(null);\n          }, 5000);\n        })\n        .catch((error) => {\n          setMessage(\"Name or number missing\");\n          setMessageType(\"ERROR\");\n          setTimeout(() => {\n            setMessage(null);\n          }, 5000);\n        });\n    }\n  };\n\n  const handleDelete = (person) => {\n    if (window.confirm(`Delete ${person.name}?`)) {\n      personsService.remove(person.id);\n      setPersons(persons.filter((p) => p.id !== person.id));\n    }\n    setMessage(`Removed ${person.name}`);\n    setMessageType(\"SUCCESS\");\n    setTimeout(() => {\n      setMessage(null);\n    }, 5000);\n  };\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value);\n  };\n\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value);\n  };\n\n  const handleFilterChange = (event) => {\n    setNameFilter(event.target.value);\n  };\n\n  const rows = () => {\n    return filteredPersons.map((person) => (\n      <Person\n        key={person.name}\n        person={person}\n        handleDelete={handleDelete.bind(this, person)}\n      />\n    ));\n  };\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={message} messageType={messageType} />\n      <FilterForm\n        handleFilterChange={handleFilterChange}\n        nameFilter={nameFilter}\n      />\n      <AddPersonForm\n        newName={newName}\n        newNumber={newNumber}\n        handleNameChange={handleNameChange}\n        handleNumberChange={handleNumberChange}\n        addPerson={addPerson}\n      />\n      <h2>Numbers</h2>\n      {rows()}\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}